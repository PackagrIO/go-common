// Code generated by MockGen. DO NOT EDIT.
// Source: scm/interface.go

// Package mock_scm is a generated GoMock package.
package mock_scm

import (
	gomock "github.com/golang/mock/gomock"
	pipeline "github.com/packagrio/go-common/pipeline"
	reflect "reflect"
)

// MockInterface is a mock of Interface interface
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// Init mocks base method
func (m *MockInterface) Init(pipelineData *pipeline.Data) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Init", pipelineData)
	ret0, _ := ret[0].(error)
	return ret0
}

// Init indicates an expected call of Init
func (mr *MockInterfaceMockRecorder) Init(pipelineData interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Init", reflect.TypeOf((*MockInterface)(nil).Init), pipelineData)
}
